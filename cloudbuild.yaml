steps:
  # Build the container image
  - name: 'gcr.io/cloud-builders/docker'
    args: ['build', '-t', '${_REGION}-docker.pkg.dev/${PROJECT_ID}/roknsound-images/roknsound-rental-inventory:$COMMIT_SHA', '--build-arg', 'MIGRATIONS_ONLY=${_MIGRATIONS_ONLY:-0}', '.']

  # Build the migrations image
  - name: 'gcr.io/cloud-builders/docker'
    args: ['build', '-t', '${_REGION}-docker.pkg.dev/${PROJECT_ID}/roknsound-images/roknsound-rental-inventory:migrate-$COMMIT_SHA', '--build-arg', 'MIGRATIONS_ONLY=1', '.']

  # Push the container images to Artifact Registry
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', '${_REGION}-docker.pkg.dev/${PROJECT_ID}/roknsound-images/roknsound-rental-inventory:$COMMIT_SHA']
  
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', '${_REGION}-docker.pkg.dev/${PROJECT_ID}/roknsound-images/roknsound-rental-inventory:migrate-$COMMIT_SHA']

  # Run migrations (create or update job)
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: bash
    args:
      - '-c'
      - |
        gcloud run jobs describe roknsound-migrations --region=${_REGION} >/dev/null 2>&1 \
        && gcloud run jobs update roknsound-migrations \
          --image=${_REGION}-docker.pkg.dev/${PROJECT_ID}/roknsound-images/roknsound-rental-inventory:migrate-$COMMIT_SHA \
          --region=${_REGION} \
          --service-account=roknsound-storage-sa@${PROJECT_ID}.iam.gserviceaccount.com \
          --set-env-vars=GS_BUCKET_NAME=${_GS_BUCKET_NAME},GS_PROJECT_ID=${PROJECT_ID},DEBUG=0,MIGRATE_ONLY=1 \
        || gcloud run jobs create roknsound-migrations \
          --image=${_REGION}-docker.pkg.dev/${PROJECT_ID}/roknsound-images/roknsound-rental-inventory:migrate-$COMMIT_SHA \
          --region=${_REGION} \
          --service-account=roknsound-storage-sa@${PROJECT_ID}.iam.gserviceaccount.com \
          --set-env-vars=GS_BUCKET_NAME=${_GS_BUCKET_NAME},GS_PROJECT_ID=${PROJECT_ID},DEBUG=0,MIGRATE_ONLY=1

  # Execute migrations
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: gcloud
    args:
      - 'run'
      - 'jobs'
      - 'execute'
      - 'roknsound-migrations'
      - '--region=${_REGION}'
      - '--wait'

  # Deploy container image to Cloud Run (skip if MIGRATIONS_ONLY=1)
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: bash
    args:
      - '-c'
      - |
        if [ "${_MIGRATIONS_ONLY:-0}" != "1" ]; then
          gcloud run deploy roknsound-rental-inventory \
          --image=${_REGION}-docker.pkg.dev/${PROJECT_ID}/roknsound-images/roknsound-rental-inventory:$COMMIT_SHA \
          --region=${_REGION} \
          --platform=managed \
          --allow-unauthenticated \
          --service-account=roknsound-storage-sa@${PROJECT_ID}.iam.gserviceaccount.com \
          --set-env-vars=GS_BUCKET_NAME=${_GS_BUCKET_NAME},GS_PROJECT_ID=${PROJECT_ID},DEBUG=0
        else
          echo "Skipping deployment as MIGRATIONS_ONLY=1"
        fi

# Store images in Artifact Registry
images:
  - '${_REGION}-docker.pkg.dev/${PROJECT_ID}/roknsound-images/roknsound-rental-inventory:$COMMIT_SHA'
  - '${_REGION}-docker.pkg.dev/${PROJECT_ID}/roknsound-images/roknsound-rental-inventory:migrate-$COMMIT_SHA'

# Faster builds with concurrent storage operations
options:
  machineType: 'E2_HIGHCPU_8'
  diskSizeGb: '100'
  
# Define the substitution variables with default values
substitutions:
  _REGION: 'us-central1'
  _GS_BUCKET_NAME: 'roknsound-music-rental-inventory'
  _MIGRATIONS_ONLY: '0'